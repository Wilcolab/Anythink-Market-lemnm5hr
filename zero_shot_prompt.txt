# to_snake_case.py
import re
import unicodedata

def to_snake_case(text: str) -> str:
    """Convert a string to snake_case.

    - Handles camelCase/PascalCase by inserting underscores between lower->upper transitions.
    - Replaces spaces, punctuation and symbols with underscores.
    - Removes diacritics (e.g., 'Ã©' -> 'e').
    - Collapses multiple underscores and strips leading/trailing underscores.
    - Returns lowercase result.
    """
    if not text:
        return ""

    # Normalize and remove diacritics
    s = unicodedata.normalize("NFKD", text)
    s = "".join(ch for ch in s if not unicodedata.combining(ch))

    # Insert underscore between lower->Upper or digit->Upper transitions (camelCase)
    s = re.sub(r"([a-z0-9])([A-Z])", r"\1_\2", s)

    # Replace spaces, hyphens and other non-alphanumerics with underscores
    s = re.sub(r"[\s\-]+", "_", s)
    s = re.sub(r"[^0-9A-Za-z_]+", "_", s)

    # Collapse multiple underscores, strip edges, lowercase
    s = re.sub(r"_+", "_", s).strip("_").lower()
    return s

if __name__ == "__main__":
    examples = [
        "Hello World",
        "convertToSnakeCase",
        "PascalCaseExample",
        "  multiple   spaces --here! ",
        "CafÃ© au lait",
        "snake_case_already",
        "HTTPResponseCode200",
    ]
    for e in examples:
        print(f"'{e}' -> '{to_snake_case(e)}'")